===

Bugs/Fixes

I had to delete dbdata in laravel-10-php-8-docker. Apparently I tried to build with a different version of mysql and
files of that version where left behind. Deleting dbdata and redoing dcBuild.sh created the following error.

ERROR 1449 (HY000): The user specified as a definer ('mysql.infoschema'@'localhost') does not exist
Fixed by doing this:
https://stackoverflow.com/a/62129259/779803

SQLSTATE[HY000] [1130] Host '172.27.0.3' is not allowed to connect to this MySQL server
host: localhost
select host from mysql.user where user='root'\G

solution use db in .env file eg
DB_HOST=db

CREATE USER 'root'@'%' IDENTIFIED BY 'root';
GRANT ALL PRIVILEGES ON *.* TO 'root'@'%';
FLUSH PRIVILEGES;

Comment out the bind address from the file /etc/mysql/my.cnf:
#bind-address  = 127.0.0.1
sudo service mysql restart

Tried to add myself to the same group as Docker and it didn't work. Notes:

If you want to add your user to the group that docker is part of, for Ubuntu list id:group of docker:

stat -c '%u:%g' /var/run/docker.sock

For me, this displayed:

0:0

View groups current user is a member of:

id --groups

add user to group docker is in:

sudo usermod -a -G [group-name] [user-name]

For me, this was sudo usermod -a -G 0 matt

You may need to logout and login (close and reopen the terminal) or restart to get the groups permissions.
NOTES

use lsof to see what application is listening on port 80:

sudo lsof -i TCP:80

SQLSTATE[HY000] [2002] Connection refused

#ERROR mysqld: File './binlog.index' not found (OS errno 13 - Permission denied)
# https://stackoverflow.com/questions/52719378/failed-to-find-valid-data-directory-mysql-generic-binary-installion/65214867#65214867
mysqld --initialize


systemctl status nginx
service nginx status
if [ -e /var/run/nginx.pid ]; then echo "nginx is running"; fi
sudo /etc/init.d/nginx status
 nmap -sV localhost -p 80
 You can find the full path to nginx binary using the type command or command command. For example:
 type nginx
 /usr/sbin/nginx
 Reloading the Nginx Webserver
 Pass the reload option as follows:
 nginx -s reload

/etc/init.d/nginx restart
/etc/init.d/nginx reload

view nginx logs, from the host run
docker logs nginx
https://betterstack.com/community/guides/logging/how-to-view-and-configure-nginx-access-and-error-logs/

You need to pass the -t to the nginx command to test configuration and exit. For example:
nginx -t

Pass the -T to test configuration, dump it on screen and exit, run:
nginx -T

https://www.digitalocean.com/community/tutorials/common-nginx-connection-errors

https://www.digitalocean.com/community/tutorials/how-to-set-up-laravel-nginx-and-mysql-with-docker-compose

